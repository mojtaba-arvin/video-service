syntax = "proto3";

service Streaming{
  rpc video_processor(JobRequest) returns (JobResponse) {}
}

message JobRequest {

  // to call client when the task is finished
  string webhook_url = 1;
  string reference_id = 2;

  // the target video on s3 to convert
  S3Input s3_input = 3;

  // every output includes destination s3 key, and convert details
  repeated StreamingOutput outputs = 5;
}


message StreamingOutput{

  enum StreamingProtocol {
    HLS = 0;
    DASH = 1;
  }
  StreamingProtocol protocol = 1;

  // upload output to multi storages or buckets with different names
  repeated S3Output s3 = 2;

  ConvertOptions options = 3;
}

message S3Input{
  string key = 1;
  string bucket = 2;
}

message S3Output{
  string key = 1;
  string bucket = 2;
  bool create_bucket = 3;
  bool dont_replace = 4;
}

message ConvertOptions{
  // HLS segments can be fmp4 or ts
  bool fmp4 = 1;

  // common fields between HLS and MPEG-Dash

  string encode_format = 2;
  string video_codec = 3;
  string audio_codec = 4;

  message QualityName{
    string name = 1;
  }
  repeated QualityName quality_names = 5;

  message CustomQuality{
    // e.g. [256, 144]
    repeated int32 size = 1;
    // e.g. [95 * 1024, 64 * 1024]
    repeated int32 bitrate = 2;
  }
  repeated CustomQuality custom_qualities = 6;
}



message JobResponse {
  string tracking_id = 1;
}
